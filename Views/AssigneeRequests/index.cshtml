@model IEnumerable<AspnetCoreMvcStarter.Models.Request>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
  var token = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}
@{
  ViewData["Title"] = "Assigned Requests";
}

<div class="card">
  <div class="card-header d-flex justify-content-between align-items-center">
    <h5 class="card-title mb-0">Assigned Requests</h5>
    <form method="get" action="@Url.Action("Index", "AssigneeRequests")" class="d-flex">
      <input type="text" name="search" value="@ViewBag.Search" class="form-control" placeholder="Search...">
      <button type="submit" class="btn btn-primary ms-2">Search</button>
    </form>
  </div>

  <div class="card-body">
    @if (ViewData["ErrorMessage"] != null)
    {
      <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @ViewData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    }

    @if (ViewData["SuccessMessage"] != null)
    {
      <div class="alert alert-success alert-dismissible fade show" role="alert">
        @ViewData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    }

    <div class="table-responsive">
      <table class="table table-striped">
        <thead>
        <tr>
          <th>REQUESTOR</th>
          <th>FACILITY</th>
          <th>ITEM</th>
          <th>QUANTITY</th>
          <th>LEVEL</th>
          <th>STATUS</th>
          <th>REQUEST DATE</th>
          <th class="text-center">ACTIONS</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
          <tr>
            <td>
              <div class="d-flex align-items-center">
                <div class="avatar me-2">
                    <span class="avatar-initial rounded-circle bg-label-primary">
                      @(item.Requestor?.FullName?[0].ToString().ToUpper() ?? "N/A")
                    </span>
                </div>
                @(item.Requestor?.FullName ?? "Unknown")
              </div>
            </td>
            <td>@(item.Facility?.FacilityName ?? "N/A")</td>
            <td>@(item.FacilityItem?.ItemName ?? "N/A")</td>
            <td>@item.QuantityRequested</td>
            <td>
                <span class="badge @GetSeverityBadgeClass(item.SeverityLevel)">
                  @(item.SeverityLevel ?? "N/A")
                </span>
            </td>
            <td>
              <!-- Changed from dropdown to static badge -->
              <span class="badge bg-label-@GetStatusBadgeClass(item.Status)">
                @(item.Status ?? "Open")
              </span>
            </td>
            <td>@(item.RequestDate.ToString("dd/MM/yyyy HH:mm"))</td>
            <td class="text-center">
              <div class="d-flex justify-content-center gap-2">
                <a href="@Url.Action("Details", "AssigneeRequests", new { id = item.RequestId })" class="btn btn-info btn-sm">
                  <i class="bx bx-info-circle"></i>
                  <span>Details</span>
                </a>
              </div>
            </td>
          </tr>
        }
        </tbody>
      </table>
    </div>

    @if (ViewBag.TotalPages > 1)
    {
      <div class="d-flex justify-content-center mt-3">
        <ul class="pagination">
          <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", "AssigneeRequests", new { page = ViewBag.CurrentPage - 1, search = ViewBag.Search })">
              <i class="bx bx-chevron-left"></i>
            </a>
          </li>
          @for (int i = 1; i <= ViewBag.TotalPages; i++)
          {
            <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
              <a class="page-link" href="@Url.Action("Index", "AssigneeRequests", new { page = i, search = ViewBag.Search })">@i</a>
            </li>
          }
          <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", "AssigneeRequests", new { page = ViewBag.CurrentPage + 1, search = ViewBag.Search })">
              <i class="bx bx-chevron-right"></i>
            </a>
          </li>
        </ul>
      </div>
    }
  </div>
</div>

@functions {
  private string GetSeverityBadgeClass(string severityLevel)
  {
    return severityLevel switch
    {
      "Low" => "bg-label-info",
      "Medium" => "bg-label-warning",
      "High" => "bg-label-danger",
      "Critical" => "bg-label-danger",
      "Urgent" => "bg-label-danger",
      _ => "bg-label-secondary"
    };
  }

  private string GetStatusBadgeClass(string status)
  {
    return status switch
    {
      "Open" => "secondary",
      "In Progress" => "primary",
      "Rejected" => "danger",
      "Closed" => "success",
      _ => "secondary"
    };
  }
}

<style>
  .avatar {
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .avatar-initial {
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: bold;
  }

  .btn-sm {
    padding: 0.5rem 1rem;
    font-size: 0.75rem;
  }
</style>

