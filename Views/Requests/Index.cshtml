@model IEnumerable<AspnetCoreMvcStarter.Models.Request>

@{
  ViewData["Title"] = "Requests";
}

<h2>Request List</h2>
<a asp-action="Create" class="btn btn-success btn-sm mb-3">Create New Request</a>

<table class="table table-bordered">
  <thead>
  <tr>
    <th>Requestor</th>
    <th>Facility</th>
    <th>Item</th>
    <th>Quantity</th>
    <th>Status</th>
    <th>Action</th>
  </tr>
  </thead>
  <tbody>
  @foreach (var item in Model)
  {
    <tr>
      <td>@item.Requestor?.Username</td>
      <td>@item.Facility?.FacilityName</td>
      <td>@item.FacilityItem?.ItemName</td>
      <td>@item.QuantityRequested</td>
      <td>
        <select class="form-control form-control-sm status-dropdown" data-request-id="@item.RequestId" data-original-status="@item.Status">
          @foreach (var status in new[] { "Open", "In Progress", "Rejected", "Closed" })
          {
            <option value="@status" selected="@(item.Status == status)">@status</option>
          }
        </select>
      </td>
      <td>
        <div style="display: flex; gap: 5px; flex-wrap: wrap;">
          <a asp-action="Details" asp-route-id="@item.RequestId" class="btn btn-info btn-sm">Details</a>
          <a asp-action="Assign" asp-route-id="@item.RequestId" class="btn btn-warning btn-sm">Assign</a>
        </div>
      </td>
    </tr>
  }
  </tbody>
</table>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".status-dropdown").forEach(dropdown => {
      dropdown.addEventListener("change", function () {
        let requestId = this.getAttribute("data-request-id");
        let newStatus = this.value;
        let originalStatus = this.getAttribute("data-original-status");

        if (confirm("Are you sure you want to update the status?")) {
          fetch('/Requests/UpdateStatus', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ requestId: requestId, status: newStatus })
          })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                alert("Status updated successfully!");
                this.setAttribute("data-original-status", newStatus);
              } else {
                alert("Error updating status: " + data.message);
                this.value = originalStatus;
              }
            })
            .catch(error => {
              alert("Request failed: " + error);
              this.value = originalStatus;
            });
        } else {
          this.value = originalStatus;
        }
      });
    });
  });
</script>
