@model IEnumerable<AspnetCoreMvcStarter.Models.Request>

@{
  ViewData["Title"] = "Request Management";
  int currentPage = ViewBag.CurrentPage;
  int totalPages = ViewBag.TotalPages;
  string currentSearch = ViewBag.Search ?? "";
}

<div class="card">
  <div class="card-header d-flex justify-content-between align-items-center">
    <h5 class="card-title mb-0">Request Management</h5>
  </div>

  <div class="card-body">
    <div class="row mb-3">
      <div class="col-md-6">
        <a asp-action="Create" class="btn btn-primary">
          <i class="bx bx-plus me-1"></i>Create New Request
        </a>
      </div>
      <div class="col-md-6">
        <form asp-action="Index" method="get" class="d-flex justify-content-end">
          <div class="input-group">
            <input type="text" name="search" value="@currentSearch" class="form-control" placeholder="Search requests...">
            <button type="submit" class="btn btn-primary">Search</button>
          </div>
        </form>
      </div>
    </div>

    <div class="table-responsive">
      <table class="table table-striped">
        <thead>
        <tr>
          <th>Facility</th>
          <th>Item</th>
          <th>Quantity</th>
          <th>Level</th>
          <th>Status</th>
          <th>Time</th>
          <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
          <tr>
            <td>@(item.Facility?.FacilityName ?? "N/A")</td>
            <td>@(item.FacilityItem?.ItemName ?? "N/A")</td>
            <td>@item.QuantityRequested</td>
            <td class="text-start">
              @if (!string.IsNullOrEmpty(item.SeverityLevel))
              {
                <span class="badge severity-badge @(item.SeverityLevel == "Critical" ? "bg-danger" :
                                   item.SeverityLevel == "High" ? "bg-warning" :
                                   item.SeverityLevel == "Medium" ? "bg-primary" :
                                   item.SeverityLevel == "Low" ? "bg-success" : "bg-secondary")">
                  @item.SeverityLevel
                </span>
              }
              else
              {
                <span class="badge bg-secondary">N/A</span>
              }
            </td>
            <td>
              <select class="form-select form-select-sm status-dropdown"
                      data-request-id="@item.RequestId"
                      data-current-status="@item.Status">
                @foreach (var status in new[] { "Open", "In Progress", "Approved", "Pending", "Rejected", "Closed" })
                {
                  <option value="@status" selected="@(status == item.Status)">@status</option>
                }
              </select>
            </td>
            <td>@(item.RequestDate.ToString("dd/MM/yyyy HH:mm"))</td>
            <td>
              <div class="d-flex gap-2">
                <a asp-action="Details" asp-route-id="@item.RequestId" class="btn btn-info btn-sm">Details</a>
                <a asp-action="Assign" asp-route-id="@item.RequestId" class="btn btn-primary btn-sm">Assign</a>
              </div>
            </td>
          </tr>
        }
        </tbody>
      </table>
    </div>

    <!-- Pagination -->
    <nav>
      <ul class="pagination justify-content-center">
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
          <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-search="@currentSearch">Previous</a>
        </li>
        @for (int i = 1; i <= totalPages; i++)
        {
          <li class="page-item @(i == currentPage ? "active" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-search="@currentSearch">@i</a>
          </li>
        }
        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
          <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-search="@currentSearch">Next</a>
        </li>
      </ul>
    </nav>
  </div>
</div>
