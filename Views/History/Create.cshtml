@model AspnetCoreMvcStarter.Models.Request

@{
  ViewData["Title"] = "Create Request";
}

<style>
  .loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 9999;
  }
  .spinner {
    width: 50px;
    height: 50px;
    border: 5px solid #f3f3f3;
    border-top: 5px solid #8a4fff;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  @@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style>

<div class="loading-overlay" id="loadingOverlay">
  <div class="spinner"></div>
</div>

<div class="container">
  <div class="card" style="max-width: 500px; margin: 2rem auto; border-radius: 16px; box-shadow: 0 10px 25px rgba(0,0,0,0.1);">
    <div style="background: linear-gradient(135deg, #8a4fff, #6a11cb); color: white; padding: 1.5rem; border-top-left-radius: 16px; border-top-right-radius: 16px; text-align: center;">
      <h2 style="color: white;">Create New Request</h2>
    </div>
    <div class="card-body p-4">
      <form id="requestForm" method="post" asp-action="Create">
        @Html.AntiForgeryToken()

        <div class="mb-3">
          <label asp-for="FacilityId" class="form-label">Facility</label>
          <select asp-for="FacilityId" id="facilitySelect" class="form-select" asp-items="ViewBag.Facilities">
            <option value="">Select Facility</option>
          </select>
          <span asp-validation-for="FacilityId" class="text-danger"></span>
        </div>

        <div class="mb-3">
          <label asp-for="FacilityItemId" class="form-label">Item</label>
          <select asp-for="FacilityItemId" id="itemSelect" class="form-select">
            <option value="">Select Item</option>
          </select>
          <span asp-validation-for="FacilityItemId" class="text-danger"></span>
        </div>

        <div class="mb-3">
          <label asp-for="QuantityRequested" class="form-label">Quantity Requested</label>
          <input asp-for="QuantityRequested" class="form-control" type="number" min="1" required />
          <span asp-validation-for="QuantityRequested" class="text-danger"></span>
        </div>

        <div class="mb-3">
          <label asp-for="SeverityLevel" class="form-label">Severity Level</label>
          <select asp-for="SeverityLevel" class="form-select">
            <option value="">Select Severity Level</option>
            <option value="Low">Low</option>
            <option value="Medium">Medium</option>
            <option value="High">High</option>
            <option value="Critical">Critical</option>
          </select>
          <span asp-validation-for="SeverityLevel" class="text-danger"></span>
        </div>

        <div class="mb-3">
          <label asp-for="Description" class="form-label">Description</label>
          <textarea asp-for="Description" class="form-control" rows="4" placeholder="Enter detailed description"></textarea>
          <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="d-flex justify-content-between mt-4">
          <a asp-action="Index" class="btn" style="background-color: #f0f0f0; color: #555; border: none; padding: 0.75rem 1.5rem; border-radius: 8px;">Back To List</a>
          <button type="submit" class="btn" style="background-color: #8a4fff; color: white; border: none; padding: 0.75rem 1.5rem; border-radius: 8px; transition: background-color 0.3s ease;">Create Request</button>
        </div>
      </form>
    </div>
  </div>
</div>

@section Scripts {
  @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

  <script>
    $(document).ready(function () {
      // Facility change event
      $('#facilitySelect').change(function () {
        var facilityId = $(this).val();
        if (facilityId) {
          $.ajax({
            url: '/History/GetItemsByFacility?facilityId=' + facilityId,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
              var itemSelect = $('#itemSelect');
              itemSelect.empty();
              itemSelect.append('<option value="">Select Item</option>');

              $.each(data, function (index, item) {
                itemSelect.append('<option value="' + item.itemId + '">' + item.itemName + '</option>');
              });
            },
            error: function () {
              console.error('Failed to load items for the selected facility');
            }
          });
        } else {
          $('#itemSelect').empty();
          $('#itemSelect').append('<option value="">Select Item</option>');
        }
});

      // Form submit event
      $('#requestForm').on('submit', function (e) {
        // Hiển thị loading overlay ngay khi form được submit
        $('#loadingOverlay').css('display', 'flex');

        // Không cần kiểm tra validation ở đây nữa
        // Validation sẽ được xử lý ở phía server
      });
    });
  </script>
}
