@model IEnumerable<AspnetCoreMvcStarter.Models.Request>

@{
    ViewData["Title"] = "Request Management";
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
    string currentSearch = ViewBag.Search ?? "";
}

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">Request Management</h5>
    </div>

    <div class="card-body">
        <div class="row mb-3">
            <div class="col-md-6">
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bx bx-plus me-1"></i>Create New Request
                </a>
            </div>
            <div class="col-md-6">
                <form asp-action="Index" method="get" class="d-flex justify-content-end">
                    <div class="input-group">
                        <input type="text" name="search" value="@currentSearch" class="form-control" placeholder="Search requests...">
                        <button type="submit" class="btn btn-primary">Search Requests</button>
                    </div>
                </form>
            </div>
        </div>

        @if (ViewData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @ViewData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (ViewData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @ViewData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (!string.IsNullOrEmpty(currentSearch))
        {
            <div class="alert alert-info mb-3">
                <p class="mb-0">
                    Showing results for: <strong>@currentSearch</strong>
                    <a asp-action="Index" class="btn btn-sm btn-outline-info ms-2">Clear</a>
                </p>
            </div>
        }

        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Requestor</th>
                        <th>ImpID</th>
                        <th>Facility</th>
                        <th>Item</th>
                        <th>Quantity</th>
                        <th>Level</th>
                        <th>Status</th>
                        <th>Time</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="avatar me-2">
                                        <span class="avatar-initial rounded-circle bg-label-primary">
                                            @(item.Requestor?.FullName?[0].ToString().ToUpper() ?? "N/A")
                                        </span>
                                    </div>
                                    @(item.Requestor?.FullName ?? "Unknown")
                                </div>
                            </td>
                            <td>@(item.AssigneeId )</td>
                            <td>@(item.Facility?.FacilityName ?? "N/A")</td>
                            <td>@(item.FacilityItem?.ItemName ?? "N/A")</td>
                            <td>@item.QuantityRequested</td>
                            <td>
                                <span class="badge @GetSeverityBadgeClass(item.SeverityLevel)">
                                    @(item.SeverityLevel ?? "N/A")
                                </span>
                            </td>
                            <td>
                                <span class="badge @GetStatusBadgeClass(item.Status)">
                                    @(item.Status ?? "N/A")
                                </span>
                            </td>
                            <td>@(item.RequestDate.ToString("dd/MM/yyyy HH:mm"))</td>
                            <td class="text-center">
                              <div class="d-flex justify-content-center gap-2">
                                <a asp-action="Details" asp-route-id="@item.RequestId" class="btn btn-info btn-sm">
                                  <i class="bx bx-info-circle"></i>
                                  <span>Detail</span>
                                </a>
                                <a asp-action="Edit" asp-route-id="@item.RequestId" class="btn btn-primary btn-sm">
                                  <i class="bx bx-edit"></i>
                                  <span>Edit</span>
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.RequestId" class="btn btn-danger btn-sm">
                                  <i class="bx bx-trash"></i>
                                  <span>Cancel</span>
                                </a>
                              </div>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (totalPages > 1)
        {
            <div class="d-flex justify-content-center mt-3">
                <ul class="pagination">
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-search="@currentSearch">
                            <i class="bx bx-chevron-left"></i>
                        </a>
                    </li>
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(currentPage == i ? "active" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-search="@currentSearch">@i</a>
                        </li>
                    }
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-search="@currentSearch">
                          <i class="bx bx-chevron-right"></i>


                        </a>
                    </li>
                </ul>
            </div>
        }
    </div>
</div>

@functions {
    private string GetSeverityBadgeClass(string severityLevel)
    {
        return severityLevel switch
        {
            "Low" => "bg-label-info",
            "Medium" => "bg-label-warning",
            "High" => "bg-label-danger",
            _ => "bg-label-secondary"
        };
    }

    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "New" => "bg-label-primary",
            "Open" => "bg-label-warning",
            "Closed" => "bg-label-success",
            "In Progress" => "bg-label-info",
            "Rejected" => "bg-label-danger",
            _ => "bg-label-secondary"
        };
    }
}


